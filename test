#!/bin/bash
set -euo pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

assert_equals() {
  local command=("$@")
  local expected
  local actual
  local exit_code
  local failure_reason

  expected="$(< /dev/stdin)"
  set +e
  actual="$("${command[@]}" 2>&1)"
  exit_code="$?"
  set -e

  if [[ "$exit_code" == "0" ]]; then
    failure_reason="got"
  else
    failure_reason="failed with"
  fi

  if [[ "$actual" != "$expected" ]]; then
    printf "${RED}Expected %s to return:${NC}\\n%s\\n${RED}But %s:${NC}\\n%s\\n" \
      "${command[*]}" \
      "$expected" \
      "$failure_reason" \
      "$actual"
    exit 1
  fi
}

get_log=(git log --oneline @~2..@ '--format=* %s')
assert_equals "${get_log[@]}" <<EOF
* Add secret business idea equipment
* Remove bought items
EOF

get_secret_equipment_file=(git show @~:shopping_list.txt)
assert_equals "${get_secret_equipment_file[@]}" <<EOF
# Things to buy

- Juice
EOF

get_last_buy_file=(git show @~:shopping_list.txt)
assert_equals "${get_last_buy_file[@]}" <<EOF
# Things to buy

- Juice
EOF

echo -e "${GREEN}Success!${NC}"
